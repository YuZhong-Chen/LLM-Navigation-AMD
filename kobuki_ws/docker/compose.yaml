version: '3'
services:
  kobuki-ws:
    build:
      context: .
      dockerfile: Dockerfile
      # Specify the target platform to build the image.
      # Reference: https://docs.docker.com/compose/compose-file/build/#platforms
      # platforms:
      #   - "linux/arm64"
    image: ros2-kobuki-ws
    container_name: ros2-kobuki-ws
    stdin_open: true
    tty: true
    privileged: true
    command: /bin/bash
    network_mode: host
    working_dir: /home/user/kobuki_ws
    environment:
      - DISPLAY=${DISPLAY}
      # Set ros2 environment variables.
      # References:
      # - https://docs.ros.org/en/humble/Concepts/Intermediate/About-Domain-ID.html
      # - https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.html
      # - https://docs.ros.org/en/humble/Tutorials/Demos/Logging-and-logger-configuration.html#console-output-colorizing
      - ROS_LOCALHOST_ONLY=0
      - ROS_DOMAIN_ID=0
      - ROS2_WS=/home/user/kobuki_ws
      - RCUTILS_COLORIZED_OUTPUT=1
    volumes:
      # Mount local timezone into container. ( Readonly )
      # Reference: https://stackoverflow.com/questions/57607381/how-do-i-change-timezone-in-a-docker-container
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # Mount X11 server
      - /tmp/.X11-unix:/tmp/.X11-unix
      # Mount devices.
      # If you don't want to mount all devices, you can specify the ones you need.
      # But make sure to mount the device below:
      # - Direct Rendering Infrastructure: /dev/dri
      # - Sound Card: /dev/snd
      # - Kubuki Base: usually /dev/ttyUSB0
      - /dev:/dev
      # Mount Gazebo models directory to reuse models downloaded during first launch.
      # Reference: https://answers.ros.org/question/365658
      - ./cache/.gazebo:/home/user/.gazebo
      # Mounting the following directories will forbid direct deletion.
      # Consider mount these directories only if the build process is slow.
      # "source=${localWorkspaceFolder}/../cache/humble/build,target=/home/ws/build,type=bind",
      # "source=${localWorkspaceFolder}/../cache/humble/install,target=/home/ws/install,type=bind",
      # "source=${localWorkspaceFolder}/../cache/humble/log,target=/home/ws/log,type=bind"
      # Mount workspace
      - ../..:/home/user
