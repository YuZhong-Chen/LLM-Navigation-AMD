version: '3'
services:
  kobuki-ws:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - TARGET_PLATFORM=amd
    image: j3soon/ros2-kobuki-ws
    container_name: ros2-kobuki-ws
    stdin_open: true
    tty: true
    privileged: true
    command: /bin/bash
    network_mode: host
    working_dir: /home/DRL_Final_Project/kobuki_ws
    environment:
      - DISPLAY=${DISPLAY}
      # Set ros2 environment variables.
      # References:
      # - https://docs.ros.org/en/humble/Concepts/Intermediate/About-Domain-ID.html
      # - https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.html
      # - https://docs.ros.org/en/humble/Tutorials/Demos/Logging-and-logger-configuration.html#console-output-colorizing
      - ROS_LOCALHOST_ONLY=0
      - ROS_DOMAIN_ID=0
      - ROS2_WS=/home/DRL_Final_Project/kobuki_ws
      - RCUTILS_COLORIZED_OUTPUT=1
      # Set NVIDIA runtime for GPU support.
      # Reference:
      # - https://robotics.stackexchange.com/a/108057
      - NVIDIA_DRIVER_CAPABILITIES=all
    # If you want to access GPU, please uncomment the lines below.
    # Reference : https://docs.docker.com/compose/gpu-support/
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    volumes:
      # Mount local timezone into container. ( Readonly )
      # Reference: https://stackoverflow.com/questions/57607381/how-do-i-change-timezone-in-a-docker-container
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # Mount X11 server
      - /tmp/.X11-unix:/tmp/.X11-unix
      # Direct Rendering Infrastructure
      - /dev/dri:/dev/dri
      # Mount sound card to prevent Gazebo warning.
      - /dev/snd:/dev/snd
      # Mount shared memory
      - /dev/shm:/dev/shm
      # Mount Gazebo models directory to reuse models downloaded during first launch.
      # Reference: https://answers.ros.org/question/365658
      - ./cache/.gazebo:/home/user/.gazebo
      # Mount workspace
      - ../..:/home/DRL_Final_Project
    devices:
      # TODO: Support mounting points other than /dev/ttyUSB0.
      # We assume that the Kobuki is connected to /dev/ttyUSB0.
      # If not, please change the following line.
      - /dev/ttyUSB0:/dev/ttyUSB0

  kobuki-ws-run:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - TARGET_PLATFORM=amd
    image: j3soon/ros2-kobuki-ws
    container_name: ros2-kobuki-ws-run
    stdin_open: true
    tty: true
    privileged: true
    command: /bin/bash -c "source install/setup.bash && ros2 launch gazebo_rl_env rl_env.launch.py"
    network_mode: host
    working_dir: /home/DRL_Final_Project/kobuki_ws
    environment:
      - DISPLAY=${DISPLAY}
      # Set ros2 environment variables.
      # References:
      # - https://docs.ros.org/en/humble/Concepts/Intermediate/About-Domain-ID.html
      # - https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.html
      # - https://docs.ros.org/en/humble/Tutorials/Demos/Logging-and-logger-configuration.html#console-output-colorizing
      - ROS_LOCALHOST_ONLY=0
      - ROS_DOMAIN_ID=0
      - ROS2_WS=/home/DRL_Final_Project/kobuki_ws
      - RCUTILS_COLORIZED_OUTPUT=1
      # Set NVIDIA runtime for GPU support.
      # Reference:
      # - https://robotics.stackexchange.com/a/108057
      - NVIDIA_DRIVER_CAPABILITIES=all
    # If you want to access GPU, please uncomment the lines below.
    # Reference : https://docs.docker.com/compose/gpu-support/
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    volumes:
      # Mount local timezone into container. ( Readonly )
      # Reference: https://stackoverflow.com/questions/57607381/how-do-i-change-timezone-in-a-docker-container
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # Mount X11 server
      - /tmp/.X11-unix:/tmp/.X11-unix
      # Direct Rendering Infrastructure
      - /dev/dri:/dev/dri
      # Mount sound card to prevent Gazebo warning.
      - /dev/snd:/dev/snd
      # Mount shared memory
      - /dev/shm:/dev/shm
      # Mount Gazebo models directory to reuse models downloaded during first launch.
      # Reference: https://answers.ros.org/question/365658
      - ./cache/.gazebo:/home/user/.gazebo
      # Mount workspace
      - ../..:/home/DRL_Final_Project
    devices:
      # TODO: Support mounting points other than /dev/ttyUSB0.
      # We assume that the Kobuki is connected to /dev/ttyUSB0.
      # If not, please change the following line.
      - /dev/ttyUSB0:/dev/ttyUSB0